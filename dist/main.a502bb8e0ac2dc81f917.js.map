{"version":3,"sources":["webpack:///./js/constants.js","webpack:///./js/layout/Interface.js","webpack:///./js/layout/Sound.js","webpack:///./js/helpers.js","webpack:///./js/snake/Rabbit.js","webpack:///./js/snake/Bonus.js","webpack:///./js/snake/Field.js","webpack:///./js/snake/Snake.js","webpack:///./js/snake/Player.js","webpack:///./app.js","webpack:///./js/snake/Game.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"names":["PLAYERS_KEYCODES","1","2","3","SPACE_KEYCODE","DRAW_INTERVAL","DEFAULT_DIFFICULTY","BONUS_FIELD_TIME","BONUS_ACTIVE_TIME","RABBIT_NUTRITIONALLY","RABBIT_MAX_HEALTH","RABBIT_MIN_HEALTH","FIELD_WIDTH","FIELD_HEIGHT","Section","selector","displayStyle","this","el","document","querySelector","toDeactivate","Error","style","display","deactivateOther","deactivate","section","push","Interface","gameClass","screenWarning","menu","game","pauseMenu","endMenu","addToDeactivate","checkScreen","bind","playersChoosed","activate","shoosePlayer1","shoosePlayer2","shoosePlayer3","menuStartButton","playAgainButton","goToMenuButton","addEventListener","shoosePlayerButtonClickHandler","sound","play","toGame","start","field","clean","players","player","cleanBonuses","snake","destroy","createSnake","score","picks","difficulty","constants","state","results","classList","add","remove","createChooseDifficultyButtons","window","e","keyCode","pause","initMusicButton","initSoundButton","innerWidth","innerHeight","topListWrap","innerHTML","key","i","length","topItem","createElement","playerID","itemTitle","innerText","itemScoreValue","append","topListDivider","n","toggle","togglePlayer","buttonsWrap","button","id","buttons","Array","from","querySelectorAll","j","musicButton","isMusicActive","localStorage","getItem","undefined","setItem","musicActive","music","volume","toggleMusic","soundButton","isSoundActive","soundActive","click","snakesCollision","rabbitEaten","getBonus","bonusEnd","bonusError","toggleSound","Sound","musicVolume","soundVolume","snakesCollisionVolume","Howl","src","loop","eventName","stop","fade","random","min","max","Math","floor","x","y","randomLauncher","fn","intervalFrom","intervalTo","setTimeout","percents","value","Rabbit","level","cell","health","nutritionally","healthInterval","setInterval","anime","targets","duration","easing","complete","clearInterval","rabbit","Bonus","type","fieldTime","activeTime","fieldInterval","activeInterval","activeTickHandler","deactivateHandler","startFieldTimer","removeFromField","bonus","Field","cells","width","height","row","cellInner","cellKey","angle","className","transparency","bonusKey","bonusesWrapEl","bonuses","counter","incubator","direction","born","rabbitsOnField","chooseLevel","getFreeCell","bonusesOnField","name","typeRangeValue","range","bonusType","getBonusName","topLevel","isUp","freeCellsKeys","Snake","playerClass","initialSize","directionLocked","bodyKeydownHandler","cellX","cellY","isBonusActive","bonusName","freezeBonus","newHeadX","newHeadY","maxX","maxY","headX","headY","snakeAte","increaceScore","isRabbitEaten","addBonus","isSnakeGotBonus","lastSnakeCell","isSnakesCollided","newSnakeCells","defineNewSnakeCells","currentKey","updateFieldCells","keyToClean","transparentCell","cleanOldLastCell","codes","includes","changeDirection","controlKeys","removeEventListener","removeSnake","Player","wrapEl","playerEl","scoreEl","picksEl","_score","_picks","v","round","scoreBonus","pop","fieldCell","setSnake","init","spewRabbit","draw","gameInterval","crawl","end","getSnakesSpeed","drawInterval","getRabbitsFrequency","spewBonus","getBonusFrequency","setGameResults","updateAchievements","openEndMenu","splice","achievements","JSON","parse","stringify","topList","currentGame","sort","a","b","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","m","d","definition","o","Object","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","installedChunks","179","deferredModules","checkDeferredModules","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkId","chunkIds","moreModules","runtime","executeModules","resolves","shift","apply","chunkLoadingGlobal","self","checkDeferredModulesImpl","result","deferredModule","fulfilled","depId","s","forEach","startup"],"mappings":"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","file":"main.a502bb8e0ac2dc81f917.js","sourcesContent":["const W_KEYCODE = 87;\r\nconst D_KEYCODE = 68;\r\nconst S_KEYCODE = 83;\r\nconst A_KEYCODE = 65;\r\n\r\nconst U_KEYCODE = 85;\r\nconst K_KEYCODE = 75;\r\nconst J_KEYCODE = 74;\r\nconst H_KEYCODE = 72;\r\n\r\nconst UP_ARROW_KEYCODE     = 38;\r\nconst RIGTH_ARROW_KEYCODE  = 39;\r\nconst BOTTOM_ARROW_KEYCODE = 40;\r\nconst LEFT_ARROW_KEYCODE   = 37;\r\n\r\nexport default {\r\n  PLAYERS_KEYCODES: {\r\n    1: [\r\n      W_KEYCODE, D_KEYCODE,\r\n      S_KEYCODE, A_KEYCODE\r\n    ],\r\n    2: [\r\n      U_KEYCODE, K_KEYCODE,\r\n      J_KEYCODE, H_KEYCODE\r\n    ],\r\n    3: [\r\n      UP_ARROW_KEYCODE, RIGTH_ARROW_KEYCODE,\r\n      BOTTOM_ARROW_KEYCODE, LEFT_ARROW_KEYCODE\r\n    ]\r\n  },\r\n  \r\n  SPACE_KEYCODE: 32,\r\n  \r\n  DRAW_INTERVAL: 33,\r\n  \r\n  DEFAULT_DIFFICULTY: 7,\r\n  \r\n  BONUS_FIELD_TIME:  15,\r\n  BONUS_ACTIVE_TIME: 10,\r\n  \r\n  RABBIT_NUTRITIONALLY: 5,\r\n  RABBIT_MAX_HEALTH:    99.999999,\r\n  RABBIT_MIN_HEALTH:    10,\r\n  \r\n  FIELD_WIDTH:  40,\r\n  FIELD_HEIGHT: 25,\r\n};","import constants from '@/js/constants';\r\n\r\nclass Section {\r\n  constructor(selector, displayStyle = 'flex') {\r\n    this.el           = document.querySelector(selector);\r\n    this.displayStyle = displayStyle;\r\n    this.toDeactivate = [];\r\n    \r\n    if (!this.el) {\r\n      throw new Error('Section selector is null.');\r\n    }\r\n    \r\n    this.el.style.display = 'none';\r\n  }\r\n  \r\n  activate() {\r\n    this.el.style.display = this.displayStyle;\r\n    this.deactivateOther();\r\n  }\r\n  \r\n  deactivate() {\r\n    this.el.style.display = 'none';\r\n  }\r\n  \r\n  deactivateOther() {\r\n    for (let Section of this.toDeactivate) {\r\n      Section.deactivate();\r\n    }\r\n  }\r\n  \r\n  addToDeactivate(section) {\r\n    this.toDeactivate.push(section);\r\n  }\r\n}\r\n\r\nexport default class Interface {\r\n  constructor(gameClass) {\r\n    this.gameClass = gameClass;\r\n    \r\n    this.screenWarning = new Section('#screen-warning');\r\n    this.menu          = new Section('#menu');\r\n    this.game          = new Section('#game');\r\n    this.pauseMenu     = new Section('#pause-menu');\r\n    this.endMenu       = new Section('#end-menu');\r\n    \r\n    this.menu.addToDeactivate(this.game);\r\n    \r\n    this.game.addToDeactivate(this.menu);\r\n    \r\n    this.checkScreen = this.checkScreen.bind(this);\r\n    \r\n    this.playersChoosed = false;\r\n  }\r\n  \r\n  init() {\r\n    this.checkScreen();\r\n    this.menu.activate();\r\n    \r\n    const shoosePlayer1   = document.querySelector('#player-1');\r\n    const shoosePlayer2   = document.querySelector('#player-2');\r\n    const shoosePlayer3   = document.querySelector('#player-3');\r\n    const menuStartButton = document.querySelector('#menu-start-button');\r\n    const playAgainButton = document.querySelector('#play-again');\r\n    const goToMenuButton  = document.querySelector('#go-to-menu');\r\n    \r\n    shoosePlayer1.addEventListener('click', () => {\r\n      this.shoosePlayerButtonClickHandler(shoosePlayer1, menuStartButton, 1);\r\n    });\r\n    \r\n    shoosePlayer2.addEventListener('click', () => {\r\n      this.shoosePlayerButtonClickHandler(shoosePlayer2, menuStartButton, 2);\r\n    });\r\n    \r\n    shoosePlayer3.addEventListener('click', () => {\r\n      this.shoosePlayerButtonClickHandler(shoosePlayer3, menuStartButton, 3);\r\n    });\r\n    \r\n    menuStartButton.addEventListener('click', () => {\r\n      if (this.playersChoosed) {\r\n        this.gameClass.sound.play('click');\r\n        this.toGame();\r\n        this.gameClass.start();\r\n      }\r\n    });\r\n    \r\n    playAgainButton.addEventListener('click', () => {\r\n      this.gameClass.field.clean();\r\n      \r\n      for (let player of this.gameClass.players) {\r\n        player.cleanBonuses();\r\n        player.snake.destroy();\r\n        player.createSnake();\r\n        player.score = 0;\r\n        player.picks = 0;\r\n      }\r\n      \r\n      this.endMenu.deactivate();\r\n      this.gameClass.start();\r\n    });\r\n    \r\n    goToMenuButton.addEventListener('click', () => {\r\n      this.gameClass.field.clean();\r\n      \r\n      for (let player of this.gameClass.players) {\r\n        player.destroy();\r\n      }\r\n      \r\n      this.gameClass.players    = [];\r\n      this.gameClass.difficulty = constants.DEFAULT_DIFFICULTY;\r\n      this.gameClass.state      = null;\r\n      this.gameClass.results    = null;\r\n      \r\n      menuStartButton.classList.add('disabled');\r\n      shoosePlayer1.classList.remove('active');\r\n      shoosePlayer2.classList.remove('active');\r\n      shoosePlayer3.classList.remove('active');\r\n      \r\n      this.createChooseDifficultyButtons();\r\n      \r\n      this.endMenu.deactivate();\r\n      this.menu.activate();\r\n    });\r\n    \r\n    this.createChooseDifficultyButtons();\r\n    \r\n    window.addEventListener('resize', this.checkScreen);\r\n    \r\n    window.addEventListener('keydown', e => {\r\n      if (e.keyCode === constants.SPACE_KEYCODE) {\r\n        if (this.gameClass.state === 'play') {\r\n          this.gameClass.pause();\r\n          this.pauseMenu.activate();\r\n        } else if (this.gameClass.state === 'pause') {\r\n          this.gameClass.start();\r\n          this.pauseMenu.deactivate();\r\n        }\r\n      }\r\n    });\r\n    \r\n    this.initMusicButton();\r\n    this.initSoundButton();\r\n  }\r\n  \r\n  checkScreen() {\r\n    if (window.innerWidth < 1000 || window.innerHeight < 700) {\r\n      this.screenWarning.activate();\r\n    } else {\r\n      this.screenWarning.deactivate();\r\n    }\r\n  }\r\n  \r\n  toMenu() {\r\n    this.menu.activate();\r\n  }\r\n  \r\n  toGame() {\r\n    this.game.activate();\r\n  }\r\n  \r\n  openEndMenu() {\r\n    this.endMenu.activate();\r\n    \r\n    const topListWrap     = document.querySelector('#top-list-wrap');\r\n    topListWrap.innerHTML = '';\r\n    \r\n    const results = [];\r\n    \r\n    for (let key in this.gameClass.results) {\r\n      results[key] = this.gameClass.results[key];\r\n    }\r\n    \r\n    for (let i = 0; i < results.length; i++) {\r\n      if (results[i]) {\r\n        const topItem = document.createElement('div');\r\n        topItem.classList.add('top-item');\r\n        \r\n        if (results[i].playerID !== null) {\r\n          topItem.classList.add('player-' + results[i].playerID);\r\n        }\r\n        \r\n        const itemTitle = document.createElement('div');\r\n        itemTitle.classList.add('item-title');\r\n        itemTitle.innerText = i;\r\n        \r\n        const itemScoreValue = document.createElement('div');\r\n        itemScoreValue.classList.add('item-score-value');\r\n        itemScoreValue.innerText = results[i].score;\r\n        \r\n        topItem.append(itemTitle);\r\n        topItem.append(itemScoreValue);\r\n        topListWrap.append(topItem);\r\n        \r\n        if (i === 3 && results.length > 4) {\r\n          const topListDivider = document.createElement('div');\r\n          topListDivider.classList.add('top-list-divider');\r\n          topListDivider.innerText = '...';\r\n          \r\n          topListWrap.append(topListDivider);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  shoosePlayerButtonClickHandler(el, menuStartButton, n) {\r\n    this.gameClass.sound.play('click');\r\n    el.classList.toggle('active');\r\n    this.gameClass.togglePlayer(n);\r\n    \r\n    if (this.gameClass.players.length < 1) {\r\n      this.playersChoosed = false;\r\n      menuStartButton.classList.add('disabled');\r\n    } else {\r\n      this.playersChoosed = true;\r\n      menuStartButton.classList.remove('disabled');\r\n    }\r\n  }\r\n  \r\n  createChooseDifficultyButtons() {\r\n    const buttonsWrap     = document.querySelector('#choose-difficulty-wrap');\r\n    buttonsWrap.innerHTML = '';\r\n    \r\n    for (let i = 1; i <= 20; i++) {\r\n      const button = document.createElement('div');\r\n      button.classList.add('choose-difficulty-button');\r\n      button.id = 'choose-difficulty-button-' + i;\r\n      \r\n      if (i <= this.gameClass.difficulty) {\r\n        button.classList.add('active');\r\n      }\r\n      \r\n      button.addEventListener('click', () => {\r\n        this.gameClass.sound.play('click');\r\n        \r\n        this.gameClass.difficulty = i;\r\n        \r\n        const buttons = Array.from(document.querySelectorAll('.choose-difficulty-button'));\r\n        \r\n        for (let j = 1; j <= buttons.length; j++) {\r\n          if (j <= i) {\r\n            buttons[j - 1].classList.add('active');\r\n          } else {\r\n            buttons[j - 1].classList.remove('active');\r\n          }\r\n        }\r\n      });\r\n      \r\n      button.addEventListener('mouseover', () => {\r\n        const buttons = Array.from(document.querySelectorAll('.choose-difficulty-button'));\r\n        \r\n        for (let j = 1; j <= buttons.length; j++) {\r\n          if (j <= i) {\r\n            buttons[j - 1].classList.add('hovered');\r\n          }\r\n        }\r\n      });\r\n      \r\n      button.addEventListener('mouseout', () => {\r\n        const buttons = Array.from(document.querySelectorAll('.choose-difficulty-button'));\r\n        \r\n        for (let j = 1; j <= buttons.length; j++) {\r\n          if (j <= i) {\r\n            buttons[j - 1].classList.remove('hovered');\r\n          }\r\n        }\r\n      });\r\n      \r\n      buttonsWrap.append(button);\r\n    }\r\n  }\r\n  \r\n  initMusicButton() {\r\n    const musicButton = document.querySelector('#music-button');\r\n    let isMusicActive = window.localStorage.getItem('music');\r\n    \r\n    if (isMusicActive === undefined || isMusicActive === 'true') {\r\n      window.localStorage.setItem('music', true);\r\n      musicButton.classList.add('active');\r\n      this.gameClass.sound.musicActive = true;\r\n    } else if (isMusicActive === 'false') {\r\n      this.gameClass.sound.music.volume(0);\r\n      this.gameClass.sound.musicActive = false;\r\n      musicButton.classList.remove('active');\r\n    }\r\n    \r\n    musicButton.addEventListener('click', e => {\r\n      musicButton.classList.toggle('active');\r\n      this.gameClass.sound.toggleMusic();\r\n    });\r\n  }\r\n  \r\n  initSoundButton() {\r\n    const soundButton = document.querySelector('#sound-button');\r\n    let isSoundActive = window.localStorage.getItem('sound');\r\n    \r\n    if (isSoundActive === undefined || isSoundActive === 'true') {\r\n      window.localStorage.setItem('sound', true);\r\n      soundButton.classList.add('active');\r\n      this.gameClass.sound.soundActive = true;\r\n    } else if (isSoundActive === 'false') {\r\n      this.gameClass.sound.music.volume(0);\r\n      this.gameClass.sound.click.volume(0);\r\n      this.gameClass.sound.snakesCollision.volume(0);\r\n      this.gameClass.sound.rabbitEaten.volume(0);\r\n      this.gameClass.sound.getBonus.volume(0);\r\n      this.gameClass.sound.bonusEnd.volume(0);\r\n      this.gameClass.sound.bonusError.volume(0);\r\n      this.gameClass.sound.soundActive = false;\r\n      soundButton.classList.remove('active');\r\n    }\r\n    \r\n    soundButton.addEventListener('click', e => {\r\n      soundButton.classList.toggle('active');\r\n      this.gameClass.sound.toggleSound();\r\n    });\r\n  }\r\n}","import {Howl, Howler} from 'howler';\r\n\r\nexport default class Sound {\r\n  constructor() {\r\n    this.musicActive = null;\r\n    this.soundActive = null;\r\n    \r\n    this.musicVolume           = 0.3;\r\n    this.soundVolume           = 0.5;\r\n    this.snakesCollisionVolume = 1;\r\n    \r\n    this.music = new Howl({\r\n      src:    ['sounds/music.mp3'],\r\n      loop:   true,\r\n      volume: this.musicVolume,\r\n    });\r\n    \r\n    this.click = new Howl({\r\n      src:    ['sounds/click.mp3'],\r\n      volume: this.soundVolume,\r\n    });\r\n    \r\n    this.rabbitEaten = new Howl({\r\n      src:    ['sounds/rabbit-eaten.mp3'],\r\n      volume: this.soundVolume,\r\n    });\r\n    \r\n    this.snakesCollision = new Howl({\r\n      src:    ['sounds/snakes-collision.mp3'],\r\n      volume: this.snakesCollisionVolume,\r\n    });\r\n    \r\n    this.getBonus = new Howl({\r\n      src:    ['sounds/get-bonus.mp3'],\r\n      volume: this.soundVolume,\r\n    });\r\n    \r\n    this.bonusEnd = new Howl({\r\n      src:    ['sounds/bonus-end.mp3'],\r\n      volume: this.soundVolume,\r\n    });\r\n    \r\n    this.bonusError = new Howl({\r\n      src:    ['sounds/bonus-error.mp3'],\r\n      volume: this.soundVolume,\r\n    });\r\n  }\r\n  \r\n  play(eventName) {\r\n    this[eventName].play();\r\n  }\r\n  \r\n  stop(eventName) {\r\n    this[eventName].stop();\r\n  }\r\n  \r\n  toggleMusic() {\r\n    if (this.musicActive) {\r\n      this.music.fade(this.music.volume(), 0.0, 300);\r\n      this.musicActive = false;\r\n      window.localStorage.setItem('music', false);\r\n    } else {\r\n      this.music.fade(0.0, this.musicVolume, 300);\r\n      this.musicActive = true;\r\n      window.localStorage.setItem('music', true);\r\n    }\r\n  }\r\n  \r\n  toggleSound() {\r\n    if (this.soundActive) {\r\n      this.click.fade(this.click.volume(), 0.0, 300);\r\n      this.snakesCollision.fade(this.snakesCollision.volume(), 0.0, 300);\r\n      this.rabbitEaten.fade(this.rabbitEaten.volume(), 0.0, 300);\r\n      this.getBonus.fade(this.getBonus.volume(), 0.0, 300);\r\n      this.bonusEnd.fade(this.bonusEnd.volume(), 0.0, 300);\r\n      this.bonusError.fade(this.bonusError.volume(), 0.0, 300);\r\n      \r\n      this.soundActive = false;\r\n      window.localStorage.setItem('sound', false);\r\n    } else {\r\n      this.click.fade(0.0, this.soundVolume, 300);\r\n      this.snakesCollision.fade(0.0, this.snakesCollision.volume(), 300);\r\n      this.rabbitEaten.fade(0.0, this.soundVolume, 300);\r\n      this.getBonus.fade(0.0, this.soundVolume, 300);\r\n      this.bonusEnd.fade(0.0, this.soundVolume, 300);\r\n      this.bonusError.fade(0.0, this.soundVolume, 300);\r\n      \r\n      this.soundActive = true;\r\n      window.localStorage.setItem('sound', true);\r\n    }\r\n  }\r\n}","export function random(min, max) {\r\n  return Math.floor(min + Math.random() * (max + 1 - min));\r\n}\r\n\r\nexport function key(x, y) {\r\n  return 'cell_' + x + '_' + y;\r\n}\r\n\r\nexport function randomLauncher(fn, intervalFrom, intervalTo) {\r\n  setTimeout(function () {\r\n    if (fn()) {\r\n      return randomLauncher(fn, intervalFrom, intervalTo);\r\n    }\r\n  }, random(intervalFrom, intervalTo));\r\n}\r\n\r\nexport function percents(value, percents) {\r\n  return (value / 100) * percents;\r\n}","import {percents} from '@/js/helpers';\r\nimport constants  from '@/js/constants';\r\nimport anime      from 'animejs';\r\n\r\nexport default class Rabbit {\r\n  constructor(level, cell) {\r\n    this.level = level;\r\n    this.cell  = cell;\r\n    \r\n    this.health        = constants.RABBIT_MAX_HEALTH;\r\n    this.nutritionally = constants.RABBIT_NUTRITIONALLY * (this.level * 2);\r\n    \r\n    const nutritionally = this.nutritionally;\r\n    \r\n    this.healthInterval = setInterval(() => {\r\n      anime.remove(this);\r\n      \r\n      anime({\r\n        targets:       this,\r\n        health:        this.health - percents(this.health, 10),\r\n        nutritionally: percents(nutritionally, this.health),\r\n        duration:      700,\r\n        easing:        'easeOutExpo',\r\n        complete:      () => {\r\n          if (this.health <= constants.RABBIT_MIN_HEALTH) {\r\n            this.destroy();\r\n          }\r\n        }\r\n      });\r\n      \r\n    }, 900);\r\n  }\r\n  \r\n  destroy() {\r\n    clearInterval(this.healthInterval);\r\n    this.cell.rabbit = null;\r\n  };\r\n}","import anime      from 'animejs';\r\nimport {percents} from '@/js/helpers';\r\nimport constants  from '@/js/constants';\r\n\r\nexport default class Bonus {\r\n  constructor(gameClass, type, level, cell) {\r\n    this.gameClass = gameClass;\r\n    this.type      = type;\r\n    this.level     = level;\r\n    this.cell      = cell;\r\n    \r\n    this.fieldTime  = constants.BONUS_FIELD_TIME + (this.level * 2);\r\n    this.activeTime = constants.BONUS_ACTIVE_TIME * this.level;\r\n    \r\n    this.fieldInterval  = null;\r\n    this.activeInterval = null;\r\n    \r\n    this.activeTickHandler = null;\r\n    this.deactivateHandler = null;\r\n    \r\n    this.startFieldTimer();\r\n  }\r\n  \r\n  startFieldTimer() {\r\n    this.fieldInterval = setInterval(() => {\r\n      this.fieldTime--;\r\n      \r\n      if (this.fieldTime < 1) {\r\n        this.removeFromField();\r\n      }\r\n    }, 1000);\r\n  }\r\n  \r\n  activate() {\r\n    this.gameClass.sound.play('getBonus');\r\n    \r\n    this.activeInterval = setInterval(() => {\r\n      if (this.gameClass.state === 'play') {\r\n        this.activeTime--;\r\n        \r\n        if (typeof this.activeTickHandler === 'function') {\r\n          this.activeTickHandler();\r\n        }\r\n      }\r\n      \r\n      if (this.activeTime < 1) {\r\n        this.gameClass.sound.play('bonusEnd');\r\n        this.deactivate();\r\n      }\r\n    }, 1000);\r\n  }\r\n  \r\n  deactivate() {\r\n    clearInterval(this.activeInterval);\r\n    \r\n    if (typeof this.deactivateHandler === 'function') {\r\n      this.deactivateHandler();\r\n    }\r\n  }\r\n  \r\n  removeFromField() {\r\n    clearInterval(this.fieldInterval);\r\n    this.cell.bonus = null;\r\n  }\r\n}","import Rabbit        from '@snake/Rabbit';\r\nimport Bonus         from '@snake/./Bonus';\r\nimport {key, random} from '@/js/helpers';\r\nimport constants     from '@/js/constants';\r\n\r\nexport default class Field {\r\n  constructor(gameClass) {\r\n    this.gameClass = gameClass;\r\n    this.cells     = {};\r\n    this.width     = constants.FIELD_WIDTH;\r\n    this.height    = constants.FIELD_HEIGHT;\r\n  }\r\n  \r\n  init() {\r\n    const field = document.querySelector('#field');\r\n    \r\n    for (let i = 1; i <= this.height; i++) {\r\n      const row = document.createElement('div');\r\n      row.classList.add('row');\r\n      \r\n      for (let j = 1; j <= this.width; j++) {\r\n        const cell = document.createElement('div');\r\n        cell.classList.add('cell');\r\n        cell.id = key(j, i);\r\n        \r\n        const cellInner = document.createElement('div');\r\n        cellInner.classList.add('cell-inner');\r\n        \r\n        cell.append(cellInner);\r\n        row.append(cell);\r\n        \r\n        this.cells[key(j, i)] = {\r\n          x:      j,\r\n          y:      i,\r\n          snake:  null,\r\n          bonus:  null,\r\n          rabbit: null,\r\n        };\r\n      }\r\n      \r\n      field.append(row);\r\n    }\r\n  }\r\n  \r\n  draw() {\r\n    for (let cellKey in this.cells) {\r\n      const x      = this.cells[cellKey].x;\r\n      const y      = this.cells[cellKey].y;\r\n      const snake  = this.cells[cellKey].snake;\r\n      const rabbit = this.cells[cellKey].rabbit;\r\n      const bonus  = this.cells[cellKey].bonus;\r\n      const angle  = this.cells[cellKey].angle;\r\n      \r\n      const cell      = document.querySelector('#' + key(x, y));\r\n      const cellInner = document.querySelector('#' + key(x, y) + ' > .cell-inner');\r\n      \r\n      if (cell) {\r\n        cellInner.className = 'cell-inner';\r\n        cellInner.innerText = '';\r\n        \r\n        if (snake) {\r\n          cellInner.classList.add('snake-' + snake.id);\r\n          \r\n          if (snake.transparency) {\r\n            cellInner.classList.add('transparent');\r\n          }\r\n        } else if (rabbit) {\r\n          cellInner.classList.add('rabbit-' + rabbit.level);\r\n          cellInner.innerText = Math.floor(rabbit.health);\r\n        } else if (bonus) {\r\n          cellInner.classList.add('bonus-' + bonus.type + '-' + bonus.level);\r\n        }\r\n      }\r\n    }\r\n    \r\n    for (let player of this.gameClass.players) {\r\n      player.bonusesWrapEl.innerHTML = '';\r\n      \r\n      for (let bonusKey in player.bonuses) {\r\n        const type    = player.bonuses[bonusKey].type;\r\n        const level   = player.bonuses[bonusKey].level;\r\n        const counter = player.bonuses[bonusKey].activeTime;\r\n        \r\n        const bonus = document.createElement('div');\r\n        bonus.classList.add('bonus', 'bonus-' + type + '-' + level);\r\n        bonus.innerText = counter;\r\n        player.bonusesWrapEl.append(bonus);\r\n      }\r\n    }\r\n  }\r\n  \r\n  setSnake(snake) {\r\n    const incubator = snake => {\r\n      const direction = (['top', 'right', 'bottom', 'left'])[random(0, 3)];\r\n      let x, y;\r\n      \r\n      if (direction === 'top') {\r\n        x = random(3, this.gameClass.field.width - 2);\r\n        y = this.gameClass.field.height;\r\n      }\r\n      \r\n      if (direction === 'right') {\r\n        x = 1;\r\n        y = random(1, this.gameClass.field.height - 2);\r\n      }\r\n      \r\n      if (direction === 'bottom') {\r\n        x = random(3, this.gameClass.field.width - 2);\r\n        y = 1;\r\n      }\r\n      \r\n      if (direction === 'left') {\r\n        x = this.gameClass.field.width;\r\n        y = random(3, this.gameClass.field.height - 2);\r\n      }\r\n      \r\n      if (this.gameClass.field.cells[key(x, y)].snake !== null) {\r\n        return incubator(snake);\r\n      }\r\n      \r\n      snake.born(x, y, direction);\r\n    };\r\n    \r\n    incubator(snake);\r\n  }\r\n  \r\n  removeSnake(snake) {\r\n    for (let cellKey in this.cells) {\r\n      if (this.cells[cellKey].snake && this.cells[cellKey].snake.id === snake.id) {\r\n        this.cells[cellKey].snake = null;\r\n      }\r\n    }\r\n  }\r\n  \r\n  spewRabbit() {\r\n    let rabbitsOnField = 0;\r\n    \r\n    for (let cellKey in this.cells) {\r\n      if (this.cells[cellKey].rabbit) {\r\n        rabbitsOnField++;\r\n        \r\n        if (rabbitsOnField > this.gameClass.players.length + 1) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    \r\n    let level    = this.chooseLevel(1, 5, 100);\r\n    const cell   = this.getFreeCell();\r\n    const rabbit = new Rabbit(level, cell);\r\n    \r\n    cell.rabbit = rabbit;\r\n  }\r\n  \r\n  spewBonus() {\r\n    let bonusesOnField = 0;\r\n    \r\n    for (let cellKey in this.cells) {\r\n      if (this.cells[cellKey].bonus) {\r\n        bonusesOnField++;\r\n        \r\n        if (bonusesOnField >= this.gameClass.players.length) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    \r\n    const getBonusName = () => {\r\n      const bonusTypes = [\r\n        {name: 'freeze', range: [1, 3]},\r\n        {name: 'cut', range: [4, 5]},\r\n        {name: 'transparency', range: [6, 15]},\r\n        {name: 'score', range: [31, 100]},\r\n      ];\r\n      \r\n      let name = null;\r\n      \r\n      const typeRangeValue = random(1, 100);\r\n      \r\n      for (let bonusType of bonusTypes) {\r\n        if (typeRangeValue >= bonusType.range[0] && typeRangeValue <= bonusType.range[1]) {\r\n          name = bonusType.name;\r\n        }\r\n      }\r\n      return name;\r\n    };\r\n    \r\n    const cell = this.getFreeCell();\r\n    \r\n    let level   = this.chooseLevel(1, 5, 50);\r\n    const bonus = new Bonus(this.gameClass, getBonusName(), level, cell);\r\n    \r\n    cell.bonus = bonus;\r\n  }\r\n  \r\n  chooseLevel(level, topLevel, n) {\r\n    const isUp = random(1, (n * level) / this.gameClass.difficulty) === 1;\r\n    \r\n    if (level === topLevel || !isUp) {\r\n      return level;\r\n    }\r\n    \r\n    return this.chooseLevel(level + 1, topLevel, n);\r\n  };\r\n  \r\n  getFreeCell() {\r\n    const freeCellsKeys = [];\r\n    \r\n    for (let cellKey in this.cells) {\r\n      const cell = this.cells[cellKey];\r\n      if (cell.snake === null && cell.bonus === null && cell.rabbit === null) {\r\n        freeCellsKeys.push(cellKey);\r\n      }\r\n    }\r\n    \r\n    return this.cells[freeCellsKeys[random(0, freeCellsKeys.length - 1)]];\r\n  }\r\n  \r\n  clean() {\r\n    for (let player of this.gameClass.players) {\r\n      player.snake.destroy();\r\n    }\r\n    \r\n    for (let cellKey in this.cells) {\r\n      if (this.cells[cellKey].bonus) {\r\n        this.cells[cellKey].bonus.removeFromField();\r\n      }\r\n      \r\n      if (this.cells[cellKey].rabbit) {\r\n        this.cells[cellKey].rabbit.destroy();\r\n      }\r\n    }\r\n  }\r\n}","import {key} from '@/js/helpers';\r\n\r\nexport default class Snake {\r\n  constructor(playerClass) {\r\n    this.playerClass = playerClass;\r\n    this.gameClass   = playerClass.gameClass;\r\n    this.id          = playerClass.id;\r\n    \r\n    this.initialSize = 5;\r\n    this.cells       = [];\r\n    this.direction   = null;\r\n    \r\n    this.transparency = false;\r\n    \r\n    this.directionLocked = false;\r\n    \r\n    this.bodyKeydownHandler = this.bodyKeydownHandler.bind(this);\r\n    \r\n    document.querySelector('body').addEventListener('keydown', this.bodyKeydownHandler);\r\n  }\r\n  \r\n  born(x, y, direction) {\r\n    const field = this.gameClass.field;\r\n    \r\n    this.direction = direction;\r\n    \r\n    for (let i = 0; i < this.initialSize; i++) {\r\n      let cellX, cellY;\r\n      \r\n      if (direction === 'top') {\r\n        cellX = x;\r\n        cellY = y + i;\r\n      }\r\n      \r\n      if (direction === 'right') {\r\n        cellX = x - i;\r\n        cellY = y;\r\n      }\r\n      \r\n      if (direction === 'bottom') {\r\n        cellX = x;\r\n        cellY = y - i;\r\n      }\r\n      \r\n      if (direction === 'left') {\r\n        cellX = x + i;\r\n        cellY = y;\r\n      }\r\n      \r\n      this.cells.push({\r\n        x: cellX,\r\n        y: cellY,\r\n      });\r\n      \r\n      if (field.cells[key(cellX, cellY)]) {\r\n        field.cells[key(cellX, cellY)].snake = this;\r\n      }\r\n    }\r\n  }\r\n  \r\n  crawl() {\r\n    const defineHeadPositions = () => {\r\n      const maxX = this.gameClass.field.width;\r\n      const maxY = this.gameClass.field.height;\r\n      \r\n      const headX = this.cells[0].x;\r\n      const headY = this.cells[0].y;\r\n      \r\n      let newHeadX, newHeadY;\r\n      \r\n      if (this.direction === 'top') {\r\n        newHeadX = headX;\r\n        newHeadY = headY - 1 < 1 ? maxY : headY - 1;\r\n      }\r\n      \r\n      if (this.direction === 'right') {\r\n        newHeadY = headY;\r\n        newHeadX = headX + 1 > maxX ? 1 : headX + 1;\r\n      }\r\n      \r\n      if (this.direction === 'bottom') {\r\n        newHeadX = headX;\r\n        newHeadY = headY + 1 > maxY ? 1 : headY + 1;\r\n      }\r\n      \r\n      if (this.direction === 'left') {\r\n        newHeadY = headY;\r\n        newHeadX = headX - 1 < 1 ? maxX : headX - 1;\r\n      }\r\n      \r\n      return [newHeadX, newHeadY];\r\n    };\r\n    \r\n    const defineNewSnakeCells = (x, y, snakeAte) => {\r\n      const cells = [];\r\n      \r\n      if (snakeAte) {\r\n        cells.push({x: x, y: y});\r\n        \r\n        for (let i = 0; i < this.cells.length; i++) {\r\n          cells.push({x: this.cells[i].x, y: this.cells[i].y});\r\n        }\r\n      } else {\r\n        for (let i = 0; i < this.cells.length; i++) {\r\n          cells[i] = {};\r\n          \r\n          if (i === 0) {\r\n            cells[i].x = x;\r\n            cells[i].y = y;\r\n          } else {\r\n            cells[i].x = this.cells[i - 1].x;\r\n            cells[i].y = this.cells[i - 1].y;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return cells;\r\n    };\r\n    \r\n    const updateFieldCells = (newSnakeCells) => {\r\n      for (let i = 0; i < newSnakeCells.length; i++) {\r\n        const currentKey = key(newSnakeCells[i].x, newSnakeCells[i].y);\r\n        \r\n        if (this.gameClass.field.cells[currentKey]) {\r\n          this.gameClass.field.cells[currentKey].snake = this;\r\n        }\r\n      }\r\n    };\r\n    \r\n    const cleanOldLastCell = snakeAte => {\r\n      const keyToClean = key(this.cells[this.cells.length - 1].x, this.cells[this.cells.length - 1].y);\r\n      \r\n      let transparentCell = false;\r\n      \r\n      for (let i = 0; i < this.cells.length - 1; i++) {\r\n        if (key(this.cells[i].x, this.cells[i].y) === keyToClean) {\r\n          transparentCell = true;\r\n        }\r\n      }\r\n      \r\n      if (this.gameClass.field.cells[keyToClean] && !snakeAte && !transparentCell) {\r\n        this.gameClass.field.cells[keyToClean].snake = null;\r\n      }\r\n    };\r\n    \r\n    const updateSnakeCells = cells => {\r\n      this.cells = cells;\r\n    };\r\n    \r\n    const isSnakesCollided = (x, y, snakeAte) => {\r\n      const snake = this.gameClass.field.cells[key(x, y)].snake;\r\n      \r\n      const lastSnakeCell = this.cells[this.cells.length - 1];\r\n      \r\n      if (\r\n          !snake ||\r\n          this.transparency ||\r\n          (snake && snake.transparency) ||\r\n          (key(x, y) === key(lastSnakeCell.x, lastSnakeCell.y) && !snakeAte)\r\n      ) {\r\n        return false;\r\n      }\r\n      \r\n      return true;\r\n    };\r\n    \r\n    const isRabbitEaten = (x, y) => {\r\n      if (this.gameClass.field.cells[key(x, y)].rabbit !== null) {\r\n        this.playerClass.increaceScore(this.gameClass.field.cells[key(x, y)].rabbit.nutritionally);\r\n        \r\n        this.gameClass.field.cells[key(x, y)].rabbit.destroy();\r\n        return true;\r\n      }\r\n      \r\n      return false;\r\n    };\r\n    \r\n    const isSnakeGotBonus = (x, y) => {\r\n      if (this.gameClass.field.cells[key(x, y)].bonus !== null) {\r\n        const bonus = this.gameClass.field.cells[key(x, y)].bonus;\r\n        \r\n        this.playerClass.addBonus(bonus);\r\n        bonus.removeFromField();\r\n        return true;\r\n      }\r\n      \r\n      return false;\r\n    };\r\n    \r\n    const isBonusActive = bonusName => {\r\n      const bonuses = this.playerClass.bonuses;\r\n      \r\n      for (let key in bonuses) {\r\n        if (key === bonusName) {\r\n          return bonuses[bonusName];\r\n        }\r\n      }\r\n      \r\n      return false;\r\n    };\r\n    \r\n    const freezeBonus       = isBonusActive('freeze');\r\n    const transparencyBonus = isBonusActive('transparency');\r\n    const cutBonus          = isBonusActive('cut');\r\n    const scoreBonus        = isBonusActive('score');\r\n    \r\n    if (freezeBonus) {\r\n      return true;\r\n    }\r\n    \r\n    const [x, y]          = defineHeadPositions();\r\n    const snakeAte        = isRabbitEaten(x, y);\r\n    const snakeGotBonus   = isSnakeGotBonus(x, y);\r\n    const snakesCollision = isSnakesCollided(x, y, snakeAte);\r\n    \r\n    const newSnakeCells = defineNewSnakeCells(x, y, snakeAte);\r\n    updateFieldCells(newSnakeCells);\r\n    cleanOldLastCell(snakeAte);\r\n    updateSnakeCells(newSnakeCells);\r\n    \r\n    if (snakeAte) {\r\n      this.gameClass.sound.play('rabbitEaten');\r\n    }\r\n    \r\n    if (snakesCollision) {\r\n      this.gameClass.sound.play('snakesCollision');\r\n    }\r\n    \r\n    this.directionLocked = false;\r\n    \r\n    return !snakesCollision;\r\n  }\r\n  \r\n  changeDirection(e, codes) {\r\n    if (e.keyCode === codes[0] && !['top', 'bottom'].includes(this.direction)) {\r\n      this.directionLocked = true;\r\n      this.direction       = 'top';\r\n    }\r\n    \r\n    if (e.keyCode === codes[1] && !['right', 'left'].includes(this.direction)) {\r\n      this.directionLocked = true;\r\n      this.direction       = 'right';\r\n    }\r\n    \r\n    if (e.keyCode === codes[2] && !['top', 'bottom'].includes(this.direction)) {\r\n      this.directionLocked = true;\r\n      this.direction       = 'bottom';\r\n    }\r\n    \r\n    if (e.keyCode === codes[3] && !['right', 'left'].includes(this.direction)) {\r\n      this.directionLocked = true;\r\n      this.direction       = 'left';\r\n    }\r\n  }\r\n  \r\n  bodyKeydownHandler(e) {\r\n    if (!this.directionLocked) {\r\n      this.changeDirection(e, this.playerClass.controlKeys);\r\n    }\r\n  }\r\n  \r\n  destroy() {\r\n    document.querySelector('body').removeEventListener('keydown', this.bodyKeydownHandler);\r\n    this.gameClass.field.removeSnake(this);\r\n  }\r\n}","import Snake         from '@snake/Snake';\r\nimport {random, key} from '@/js/helpers';\r\nimport anime         from 'animejs';\r\nimport constants     from '@/js/constants';\r\n\r\nexport default class Player {\r\n  constructor(gameClass, id) {\r\n    this.gameClass = gameClass;\r\n    this.id        = id;\r\n    \r\n    this.wrapEl        = null;\r\n    this.playerEl      = null;\r\n    this.scoreEl       = null;\r\n    this.picksEl       = null;\r\n    this.bonusesWrapEl = null;\r\n    \r\n    this._score = 0;\r\n    this._picks = 0;\r\n    \r\n    this.bonuses = {};\r\n    \r\n    this.controlKeys = constants.PLAYERS_KEYCODES[id];\r\n    \r\n    this.createSnake();\r\n  }\r\n  \r\n  get score() {\r\n    return this._score;\r\n  }\r\n  \r\n  set score(v) {\r\n    anime.remove(this);\r\n    \r\n    anime({\r\n      targets:   this.scoreEl,\r\n      innerText: v,\r\n      round:     1,\r\n      duration:  700,\r\n      easing:    'easeOutExpo',\r\n    });\r\n    \r\n    this._score = v;\r\n  }\r\n  \r\n  get picks() {\r\n    return this._picks;\r\n  }\r\n  \r\n  set picks(v) {\r\n    anime.remove(this);\r\n    \r\n    anime({\r\n      targets:   this.picksEl,\r\n      innerText: v,\r\n      round:     1,\r\n      duration:  700,\r\n      easing:    'easeOutExpo',\r\n    });\r\n    \r\n    this._picks = v;\r\n  }\r\n  \r\n  init() {\r\n    this.wrapEl = document.querySelector('#players-wrap');\r\n    \r\n    this.playerEl = document.createElement('div');\r\n    this.playerEl.classList.add('player', 'player-' + this.id);\r\n    \r\n    this.scoreEl = document.createElement('div');\r\n    this.scoreEl.classList.add('score');\r\n    this.scoreEl.innerText = this.score;\r\n    \r\n    this.picksEl = document.createElement('div');\r\n    this.picksEl.classList.add('picks');\r\n    this.picksEl.innerText = this.picks;\r\n    \r\n    this.bonusesWrapEl = document.createElement('div');\r\n    this.bonusesWrapEl.classList.add('bonuses-wrap');\r\n    \r\n    this.playerEl.append(this.scoreEl);\r\n    this.playerEl.append(this.picksEl);\r\n    this.playerEl.append(this.bonusesWrapEl);\r\n    \r\n    this.wrapEl.append(this.playerEl);\r\n  }\r\n  \r\n  increaceScore(score) {\r\n    const scoreBonus = this.bonuses['score'];\r\n    \r\n    score *= this.gameClass.difficulty;\r\n    \r\n    if (scoreBonus) {\r\n      score *= scoreBonus.level + 1;\r\n    }\r\n    \r\n    this.score += score;\r\n    this.picks++;\r\n  }\r\n  \r\n  addBonus(bonus) {\r\n    if (\r\n        !this.bonuses[bonus.type] ||\r\n        (this.bonuses[bonus.type] && this.bonuses[bonus.type].level <= bonus.level)\r\n    ) {\r\n      if (this.bonuses[bonus.type]) {\r\n        this.bonuses[bonus.type].deactivate();\r\n      }\r\n      \r\n      bonus.deactivateHandler = () => {\r\n        if (this.gameClass.state === 'play') {\r\n          if (bonus.type === 'transparency') {\r\n            this.snake.transparency = false;\r\n          }\r\n          \r\n          delete this.bonuses[bonus.type];\r\n        }\r\n      };\r\n      \r\n      bonus.activate();\r\n      \r\n      if (bonus.type === 'transparency') {\r\n        this.snake.transparency = true;\r\n      }\r\n      \r\n      if (bonus.type === 'cut') {\r\n        bonus.activeTickHandler = () => {\r\n          if (this.snake.cells.length > this.snake.initialSize) {\r\n            const lastSnakeCell = this.snake.cells.pop();\r\n            const fieldCell     = this.gameClass.field.cells[key(lastSnakeCell.x, lastSnakeCell.y)];\r\n            \r\n            if (fieldCell) {\r\n              fieldCell.snake = null;\r\n            }\r\n          }\r\n        };\r\n      }\r\n      \r\n      this.bonuses[bonus.type] = bonus;\r\n    }\r\n    \r\n    if (this.bonuses[bonus.type] && this.bonuses[bonus.type].level > bonus.level) {\r\n      this.gameClass.sound.play('bonusError');\r\n    }\r\n  }\r\n  \r\n  cleanBonuses() {\r\n    for(let bonusKey in this.bonuses) {\r\n      this.bonuses[bonusKey].deactivate();\r\n    }\r\n  \r\n    this.bonuses = {};\r\n  }\r\n  \r\n  createSnake() {\r\n    this.snake = new Snake(this);\r\n    this.gameClass.field.setSnake(this.snake);\r\n  }\r\n  \r\n  destroy() {\r\n    this.cleanBonuses();\r\n    this.playerEl.remove();\r\n    this.snake.destroy();\r\n  }\r\n}","import Game from '@snake/Game';\r\nimport '@/app.scss';\r\n\r\nconst game = new Game();\r\ngame.init();","import Interface        from '@/js/layout/Interface';\r\nimport Sound            from '@/js/layout/Sound';\r\nimport Field            from '@snake/Field';\r\nimport Bonus            from '@snake/Bonus';\r\nimport Player           from '@snake/Player';\r\nimport {randomLauncher} from '@/js/helpers';\r\nimport constants        from '@/js/constants';\r\n\r\n\r\nexport default class Game {\r\n  constructor() {\r\n    this.interface = new Interface(this);\r\n    this.field     = new Field(this);\r\n    this.sound     = new Sound();\r\n    \r\n    this.players    = [];\r\n    this.difficulty = constants.DEFAULT_DIFFICULTY;\r\n    this.state      = null;\r\n    \r\n    this.results = null;\r\n  }\r\n  \r\n  init() {\r\n    this.interface.init();\r\n    this.field.init();\r\n  }\r\n  \r\n  start() {\r\n    if (!this.state) {\r\n      this.field.spewRabbit();\r\n    }\r\n    \r\n    this.sound.play('music');\r\n    this.state = 'play';\r\n    this.field.draw();\r\n    \r\n    let gameInterval = setInterval(() => {\r\n      if (this.state !== 'play') {\r\n        return clearInterval(gameInterval);\r\n      }\r\n      \r\n      for (let player of this.players) {\r\n        if (!player.snake.crawl()) {\r\n          this.field.draw();\r\n          this.end();\r\n        }\r\n      }\r\n    }, this.getSnakesSpeed());\r\n    \r\n    let drawInterval = setInterval(() => {\r\n      if (this.state !== 'play') {\r\n        return clearInterval(drawInterval);\r\n      }\r\n      \r\n      this.field.draw();\r\n    }, constants.DRAW_INTERVAL);\r\n    \r\n    randomLauncher(() => {\r\n      if (this.state !== 'play') {\r\n        return false;\r\n      }\r\n      \r\n      this.field.spewRabbit();\r\n      \r\n      return true;\r\n    }, ...this.getRabbitsFrequency());\r\n    \r\n    randomLauncher(() => {\r\n      if (this.state !== 'play') {\r\n        return false;\r\n      }\r\n      \r\n      this.field.spewBonus();\r\n      \r\n      return true;\r\n    }, ...this.getBonusFrequency());\r\n  }\r\n  \r\n  pause() {\r\n    this.state = 'pause';\r\n  }\r\n  \r\n  end() {\r\n    this.state = 'end';\r\n    this.sound.stop('music');\r\n    this.setGameResults();\r\n    this.updateAchievements();\r\n    this.interface.openEndMenu();\r\n  }\r\n  \r\n  togglePlayer(n) {\r\n    for (let i = 0; i < this.players.length; i++) {\r\n      if (this.players[i].id === n) {\r\n        this.players[i].destroy();\r\n        this.players.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n    \r\n    const player = new Player(this, n);\r\n    player.init();\r\n    \r\n    this.players.push(player);\r\n  }\r\n  \r\n  getSnakesSpeed() {\r\n    return 1000 / this.difficulty;\r\n  }\r\n  \r\n  getRabbitsFrequency() {\r\n    return [1000, 3000];\r\n  }\r\n  \r\n  getBonusFrequency() {\r\n    return [100000 / this.difficulty, 200000 / this.difficulty];\r\n  }\r\n  \r\n  updateAchievements() {\r\n    const achievements = JSON.parse(window.localStorage.getItem('achievements')) || [];\r\n    \r\n    for (let player of this.players) {\r\n      const score = Math.round(player.score);\r\n      \r\n      if (score > 0) {\r\n        achievements.push(score);\r\n      }\r\n    }\r\n    \r\n    window.localStorage.setItem('achievements', JSON.stringify(achievements));\r\n  }\r\n  \r\n  setGameResults() {\r\n    const achievements = JSON.parse(window.localStorage.getItem('achievements')) || [];\r\n    const topList      = [];\r\n    const results      = {};\r\n    \r\n    for (let i = 0; i < achievements.length; i++) {\r\n      topList.push({\r\n        score:       achievements[i],\r\n        currentGame: false,\r\n        playerID:    null,\r\n      });\r\n    }\r\n    \r\n    for (let player of this.players) {\r\n      const score = Math.round(player.score);\r\n      \r\n      topList.push({\r\n        score:       score,\r\n        currentGame: true,\r\n        playerID:    player.id,\r\n      });\r\n    }\r\n    \r\n    topList.sort((a, b) => b.score - a.score);\r\n    \r\n    for (let i = 0; i < topList.length; i++) {\r\n      if (topList[i].currentGame || i < 3) {\r\n        results[i + 1] = topList[i];\r\n      }\r\n    }\r\n    \r\n    this.results = results;\r\n  }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n// It's empty as some runtime module handles the default behavior\n__webpack_require__.x = x => {};\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\nvar deferredModules = [\n\t[1202,338],\n\t[3275,338]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = x => {};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime, executeModules] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = x => {};\n\t}\n\treturn result;\n}\nvar startup = __webpack_require__.x;\n__webpack_require__.x = () => {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = startup || (x => {});\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"sourceRoot":""}